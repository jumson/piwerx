https://blog.agchapman.com/using-qemu-to-emulate-a-raspberry-pi/
starting with 2018-04-18-raspbian-stretch.img

qemu-img convert -f raw -O qcow2 2018-04-18-raspbian-stretch.zip raspbian-pinode.qcow
qemu-img resize raspbian-pinode.qcow +12GB

now it is bigger....

sudo qemu-system-arm -kernel \
./kernel-qemu -append "root=/dev/sda2 panic=1 rootfstype=ext4 rw" \
-hda raspbian-pinode.qcow -cpu arm1176 -m 256 -M versatilepb -no-reboot -serial stdio \
-net nic -net user \
-net tap,ifname=vnet0,script=no,downscript=no

sudo qemu-system-arm \
-kernel ./kernel-qemu2 \
-append "root=/dev/sda2 panic=1 rootfstype=ext4 rw" \
-machine versatilepb \
-hda raspbian-pinode.qcow \
-cpu arm1176 -m 256 \
-M versatilepb \
-no-reboot \
-serial stdio \
-net nic -net user \
-net tap,ifname=vnet0,script=no,downscript=no

sudo qemu-system-arm \
-kernel ./kernel-qemu \
-machine raspi2 \
-hda raspbian-pinode.qcow \
-cpu arm1176 -m 256 \
-M versatilepb \
-no-reboot \
-serial stdio \
-net nic -net user \
-net tap,ifname=vnet0,script=no,downscript=no

https://github.com/dhruvvyas90/qemu-rpi-kernel
working:

sudo qemu-system-arm \
-kernel kernel-qemu2 \
-cpu arm1176 -m 256 -M versatilepb -dtb versatile-pb.dtb \
-append "root=/dev/sda2 panic=1 rootfstype=ext4 rw" \
-hda 2018-06-27-raspbian-stretch.zip

sudo qemu-img resize 2018-04-18-raspbian-stretch.img +10GB
then resize partition with fdisk: https://www.codepool.biz/resize-raspbian-image-qemu-windows.html

sudo fdisk -l 2018-04-18-raspbian-stretch.img
sudo fdisk 2018-04-18-raspbian-stretch.img
(look at the sector start for part 2 - 98304 for me)
p
(to delete 2nd partition table)
d 
2
(to check)
p 
(new partition 2)
n
p 
2 
(enter the sector start that was there before - 98304)
(accept default sector end)
(do not remove ext4 signature)

(to check - take note that size has changed)
p
(to write/make the actual changes)
w

(now find a loop)
sudo losetup -f
(/dev/loop7 for me)

sudo losetup -o $((98304*512)) /dev/loop7 2018-04-18-raspbian-stretch.img
sudo e2fsck -f /dev/loop7 
sudo resize2fs /dev/loop7 
sudo losetup -d /dev/loop7

(boot up in QEMU and check space)
df -h

sudo qemu-system-arm \
-kernel kernel-qemu2 \
-cpu arm1176 -m 256 -M versatilepb -dtb versatile-pb.dtb \
-append "root=/dev/sda2 panic=1 rootfstype=ext4 rw" \
-hda 2018-06-27-raspbian-stretch.img \
-net nic -net user,hostfwd=tcp::5022-:22

qemu-system-arm -kernel kernel-qemu2 -cpu arm1176 -m 256 -M versatilepb -dtb versatile-pb.dtb -append "root=/dev/sda2 panic=1 rootfstype=ext4 rw" -hda 2018-06-27-raspbian-stretch.img -net nic -net user,hostfwd=tcp::5022-:22

qemu-system-aarch64 -cpu arm1176 -m 256 -kernel kernel7 -M raspi3 -dtb bcm2710-rpi-3-b-plus.dtb -drive format=raw,file=2018-06-27-raspbian-stretch.img -serial stdio -net nic -net user,hostfwd=tcp::5022-:22

-drive format=raw,file=2018-06-27-raspbian-stretch.img

****setup on pi****8GB card for smaller backup
NY timezone / US english
thisismypassword
setup wifi: benign / thisismypassword
*on Lenovo, created hostednetwork: benign thisismypassword
    netsh wlan set hostednetwork mode=allow ssid="benign" key="thisismypassword"
    netsh wlan start hostednetwork
    netsh wlan show hostednetwork
    netsh wlan stop hostednetwork
    updated OS on 8 July 2018
raspi-config -- 
hostname=piNode1
ssh=on
vnc=on
piNode1=192.168.137.11
expand filesystem
CLI autologin as pi

install docker: curl -fsSL get.docker.com -o get-docker.sh && sh get-docker.sh
 https://medium.freecodecamp.org/the-easy-way-to-set-up-docker-on-a-raspberry-pi-7d24ced073ef
sudo usermod -aG docker pi
logged in to docker jumson

***saved this image as piNode1-init.img

qemu-system-arm -kernel kernel-qemu2 -cpu arm1176 -m 256 -M versatilepb -dtb versatile-pb.dtb -append "root=/dev/sda2 panic=1 rootfstype=ext4 rw" -drive format=raw,file=piNode1-init.img -net nic -net user,hostfwd=tcp::5022-:22
in /etc/dhcpcd.conf, comment out the static stuff at the bottom when working and need internet -- then uncomments before shutting down and burning


***test on 8GB card and image in QEMU***
#Setup git, sudo and other user called docker -- do rest of build as docker with sudo, not root
sudo apt-get -y install git sudo python-pip udev mousepad software-properties-common 
sudo git config --global user.name "jumson"
sudo git config --global user.email "munsonj@gmail.com"
sudo useradd -m docker && echo "docker:docker" | chpasswd && adduser docker sudo
sudo su docker
 https://github.com/pothosware/PothosCore/wiki/Ubuntu

 installed as per LimeBase dockerfile -- now installing pothoswarefrom source: https://github.com/pothosware/PothosCore/wiki/BuildGuide#get-the-dependencies
 required libnuma-dev, which I had to wget from debian website, for buster, not stretch, since stretch had no armhf package
 dependancy installed was libnuma1, same problem

 added debian stretch to repository list in /etc/apt/sources.list
 to get gpg keys, had to install dirmngr, and follow: 
https://raspberrypi.stackexchange.com/questions/12258/where-is-the-archive-key-for-backports-debian-org

libspuce-dev problems: https://launchpad.net/~myriadrf/+archive/ubuntu/drivers/+build/8739753

SoapySDR, LimeSuite, and PothosSDR are all installed 
next: 
sudo apt install gnuradio
sudo apt install gqrx

https://github.com/xmikos/qspectrumanalyzer
sudo apt-get install python3-pip python3-pyqt5 python3-numpy python3-scipy python3-soapysdr
installing soapy modules for other devices as well
sudo apt-get install soapysdr-module-rtlsdr soapysdr-module-airspy soapysdr-module-hackrf soapysdr-module-lms7
pip3 install --user qspectrumanalyzer

build/install limesdr source blocks for gnuradio
https://wiki.myriadrf.org/Gr-limesdr_Plugin_for_GNURadio

*9 july 2018 -- 6am, GNURadio shows LimeSuite, osmo, rtl source blocks

also downlaoded a few good graphs: https://hackaday.io/project/20500/files

saved the image: D:/OneDrives/OneDrive - Naval Postgraduate School/thesis/pi/raspbian-stretch-sdrApps

